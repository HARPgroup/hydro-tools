% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dHVariablePluginDefault.R
\name{dHVariablePluginDefault}
\alias{dHVariablePluginDefault}
\title{Base entity data object}
\value{
reference class of type openmi.om.base.

an updated config if necessary or FALSE if it fails

an updated config if necessary or FALSE if it fails
}
\description{
Handler class for property entities (and timeseries if needed)
}
\details{
Has standard methods for managing data and meta data
}
\examples{
NA
}
\seealso{
NA
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{name}}{what is it called}

\item{\code{datasource}}{used to retrieve local and remote properties}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-dHVariablePluginDefault-new}{\code{dHVariablePluginDefault$new()}}
\item \href{#method-dHVariablePluginDefault-exportOpenMI}{\code{dHVariablePluginDefault$exportOpenMI()}}
\item \href{#method-dHVariablePluginDefault-exportOpenMIBase}{\code{dHVariablePluginDefault$exportOpenMIBase()}}
\item \href{#method-dHVariablePluginDefault-clone}{\code{dHVariablePluginDefault$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-dHVariablePluginDefault-new"></a>}}
\if{latex}{\out{\hypertarget{method-dHVariablePluginDefault-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{dHVariablePluginDefault$new(datasource = NULL, config = list())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{datasource}}{RESTful repository (optional)}

\item{\code{config}}{list of attributes to set, see also: to_list() for format}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
object instance
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-dHVariablePluginDefault-exportOpenMI"></a>}}
\if{latex}{\out{\hypertarget{method-dHVariablePluginDefault-exportOpenMI}{}}}
\subsection{Method \code{exportOpenMI()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{dHVariablePluginDefault$exportOpenMI(entity)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{entity}}{the local object to work on}

\item{\code{load_remote}}{automatically query REST data source for matches?}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-dHVariablePluginDefault-exportOpenMIBase"></a>}}
\if{latex}{\out{\hypertarget{method-dHVariablePluginDefault-exportOpenMIBase}{}}}
\subsection{Method \code{exportOpenMIBase()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{dHVariablePluginDefault$exportOpenMIBase(entity)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{entity}}{the local object to work on}

\item{\code{load_remote}}{automatically query REST data source for matches?}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-dHVariablePluginDefault-clone"></a>}}
\if{latex}{\out{\hypertarget{method-dHVariablePluginDefault-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{dHVariablePluginDefault$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
